version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: omi-postgres
    environment:
      POSTGRES_USER: omi
      POSTGRES_PASSWORD: omi_password
      POSTGRES_DB: omi
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init-databases.sql:/docker-entrypoint-initdb.d/init-databases.sql
    networks:
      - omi-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U omi"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: omi-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - omi-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: omi-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - omi-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Service Discovery (Eureka)
  service-discovery:
    build:
      context: ./backend/service-discovery
      dockerfile: Dockerfile
    container_name: omi-service-discovery
    ports:
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - omi-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      - postgres
      - redis

  # Config Server
  config-server:
    build:
      context: ./backend/config-server
      dockerfile: Dockerfile
    container_name: omi-config-server
    ports:
      - "8888:8888"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-discovery:8761/eureka/
    networks:
      - omi-network
    depends_on:
      service-discovery:
        condition: service_healthy

  # API Gateway
  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile
    container_name: omi-api-gateway
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-discovery:8761/eureka/
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
    networks:
      - omi-network
    depends_on:
      service-discovery:
        condition: service_healthy
      config-server:
        condition: service_started

  # Auth Service
  auth-service:
    build:
      context: ./backend/auth-service
      dockerfile: Dockerfile
    container_name: omi-auth-service
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/auth_db
      SPRING_DATASOURCE_USERNAME: omi
      SPRING_DATASOURCE_PASSWORD: omi_password
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-discovery:8761/eureka/
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
    networks:
      - omi-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      service-discovery:
        condition: service_healthy

  # Patient Service
  patient-service:
    build:
      context: ./backend/patient-service
      dockerfile: Dockerfile
    container_name: omi-patient-service
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/patient_db
      SPRING_DATASOURCE_USERNAME: omi
      SPRING_DATASOURCE_PASSWORD: omi_password
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-discovery:8761/eureka/
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
    networks:
      - omi-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      service-discovery:
        condition: service_healthy

  # Appointment Service
  appointment-service:
    build:
      context: ./backend/appointment-service
      dockerfile: Dockerfile
    container_name: omi-appointment-service
    ports:
      - "8083:8083"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/appointment_db
      SPRING_DATASOURCE_USERNAME: omi
      SPRING_DATASOURCE_PASSWORD: omi_password
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-discovery:8761/eureka/
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
    networks:
      - omi-network
    depends_on:
      postgres:
        condition: service_healthy
      service-discovery:
        condition: service_healthy

  # Notification Service
  notification-service:
    build:
      context: ./backend/notification-service
      dockerfile: Dockerfile
    container_name: omi-notification-service
    ports:
      - "8084:8084"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/notification_db
      SPRING_DATASOURCE_USERNAME: omi
      SPRING_DATASOURCE_PASSWORD: omi_password
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-discovery:8761/eureka/
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
    networks:
      - omi-network
    depends_on:
      postgres:
        condition: service_healthy
      service-discovery:
        condition: service_healthy

  # Report Service
  report-service:
    build:
      context: ./backend/report-service
      dockerfile: Dockerfile
    container_name: omi-report-service
    ports:
      - "8085:8085"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/report_db
      SPRING_DATASOURCE_USERNAME: omi
      SPRING_DATASOURCE_PASSWORD: omi_password
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-discovery:8761/eureka/
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
    networks:
      - omi-network
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      service-discovery:
        condition: service_healthy

  # Payment Service
  payment-service:
    build:
      context: ./backend/payment-service
      dockerfile: Dockerfile
    container_name: omi-payment-service
    ports:
      - "8086:8086"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/payment_db
      SPRING_DATASOURCE_USERNAME: omi
      SPRING_DATASOURCE_PASSWORD: omi_password
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-discovery:8761/eureka/
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
    networks:
      - omi-network
    depends_on:
      postgres:
        condition: service_healthy
      service-discovery:
        condition: service_healthy

  # Media Service
  media-service:
    build:
      context: ./backend/media-service
      dockerfile: Dockerfile
    container_name: omi-media-service
    ports:
      - "8087:8087"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/media_db
      SPRING_DATASOURCE_USERNAME: omi
      SPRING_DATASOURCE_PASSWORD: omi_password
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-discovery:8761/eureka/
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
    networks:
      - omi-network
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      service-discovery:
        condition: service_healthy

  # Analytics Service
  analytics-service:
    build:
      context: ./backend/analytics-service
      dockerfile: Dockerfile
    container_name: omi-analytics-service
    ports:
      - "8088:8088"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/analytics_db
      SPRING_DATASOURCE_USERNAME: omi
      SPRING_DATASOURCE_PASSWORD: omi_password
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-discovery:8761/eureka/
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
    networks:
      - omi-network
    depends_on:
      postgres:
        condition: service_healthy
      service-discovery:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local

networks:
  omi-network:
    driver: bridge
